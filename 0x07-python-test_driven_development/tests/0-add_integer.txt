>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1,2)
3
>>> add_integer(1,int("2"))
3
>>> add_integer(0, -1)
-1
>>> add_integer(1.3, 3.5)
4
>>> add_integer(float(2), 3)
5
>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/add_integer.py", line 12, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(1, "2")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/add_integer.py", line 14, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer(1, int("s"))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: invalid literal for int() with base 10: 's'
